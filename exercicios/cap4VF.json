{
"title": "Cap. 4 - Modelos",  
"questions": [
  {
    "text": "Uma das vantagens de métodos formais é que as especificações de programas tornam-se precisas e não-ambíguas.",
    "correct": "true"
  },
  {
    "text": "Ferramentas CASE ajudam na codificação de sistemas de software; portanto, são similares às atuais IDEs.",
    "correct": "false"
  },
  {
    "text": "UML pode ser usada como blueprint (modelos detalhados), como linguagem de programação ou como sketches (esboços).",
    "correct": "true"
  },
  {
    "text": "Quando se adota métodos ágeis, UML é usada principalmente para construir sketches (esboços).",
    "correct": "true"
  },
  {
    "text": "Engenharia Reversa é o nome que se dá a técnicas que permitem analisar alternativas de design antes que exista qualquer linha de código.",
    "correct": "false"
  },
  {
    "text": "São exemplos de diagramas UML estáticos: Diagramas de Classes, Diagramas de Pacotes e Diagramas de Atividades.",
    "correct": "false"
  },
  {
    "text": "Diagramas UML dinâmicos modelam eventos que ocorrem durante a execução de um sistema.",
    "correct": "true"
  },
  {
    "text": "Em Diagramas de Classes, setas podem representar associações, dependências ou herança.",
    "correct": "true"
  },
  {
    "text": "Quando uma classe A possui um atributo de um tipo B, dizemos que existe uma associação (isto é, uma seta) de B para A.",
    "correct": "false"
  },
  {
    "text": "Em UML, não é possível indicar quantos objetos podem estar associados ao atributo responsável por uma associação.",
    "correct": "false"
  },
  {
    "text": "Dependências em UML — representadas por setas contínuas — indicam relações entre classes que não são devidas a associações ou herança.",
    "correct": "false"
  },
  {
    "text": "Diagramas de Sequência representam alguns objetos e as chamadas de métodos que eles executam. Logo, eles são diagramas dinâmicos.",
    "correct": "true"
  },
  {
    "text": "Um objeto pode ficar ativo uma única vez em um diagrama de sequência.",
    "correct": "false"
  },
  {
    "text": "Dentre os nodos de Diagramas de Atividades, temos: nodo inicial, ações, decisões, merges, forks, joins e nodo final.",
    "correct": "true"
  },
  {
    "text": "Em Diagramas de Atividades, merges possuem um único fluxo de entrada e também um único fluxo de saída.",
    "correct": "false"
  },
  {
    "text": "Como exemplos de notações alternativas a Diagramas de Atividades, podemos citar fluxogramas, redes de petri e BPMN.",
    "correct": "true"
  },
  {
    "text": "UML como blueprint é recomendado quando se emprega processos do tipo Waterfall ou Unificado (RUP).",
    "correct": "true"
  },
  {
    "text": "Em diagramas de sequência, forks possuem um único fluxo de entrada e um ou mais fluxos de saída.",
    "correct": "true"
  }
]
}	    