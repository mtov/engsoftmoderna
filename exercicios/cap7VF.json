{
  "title": "Cap. 7 - Arquitetura",  
  "questions": [
  {
    "text": "Uma Arquitetura em Camadas torna mais difícil a manutenção e evolução de um sistema de software.",
    "correct": "false"
  },
  {
    "text": "Em uma arquitetura Três Camadas temos as seguintes camadas: interface com o usuário, aplicação (ou lógica de negócio) e banco de dados.",
    "correct": "true"
  },
  {
    "text": "A camada de Visão mais o Modelo constitui a interface gráfica de sistemas MVC.",
    "correct": "false"
  },
  {
    "text": "Em Arquiteturas MVC, classes de Modelo podem ser usadas por várias Visões.",
    "correct": "true"
  },
  {
    "text": "Em MVC, a Visão pode ser entendida como uma observadora da camada de Controle.",
    "correct": "false"
  },
  {
    "text": "Em MVC, as regras de negócio são implementadas na camada de Modelo.",
    "correct": "true"
  },
  {
    "text": "Single Page Applications (SPAs) são mais interativas e responsivas do que aplicações Web tradicionais.",
    "correct": "true"
  },
  {
    "text": "Microsserviços permitem que cada time de desenvolvimento tenha seu próprio fluxo de liberação de releases.",
    "correct": "true"
  },
  {
    "text": "Microsserviços devem compartilhar o mesmo banco de dados, por questões de segurança.",
    "correct": "false"
  },
  {
    "text": "Dentre outras vantagens, microsserviços oferecem independência de tecnologia, toleram falhas parciais e oferecem uma menor latência na comunicação.",
    "correct": "false"
  },
  {
    "text": "Arquiteturas orientadas a mensagens oferecem desacoplamento no tempo, isto é, um consumidor pode receber uma mensagem mesmo estando off-line no momento em que ela foi produzida.",
    "correct": "true"
  },
  {
    "text": "Arquiteturas orientadas a mensagens oferecem desacoplamento no espaço, isto é, produtores e consumidores não precisam estar conectados na mesma rede local.",
    "correct": "false"
  },
  {
    "text": "Em arquiteturas Publish/Subscribe temos um estilo de comunicação de 1 para 1, pois um evento é enviado sempre para um único assinante (subscriber).",
    "correct": "false"
  },
  {
    "text": "MVC, Pipes & Filtros e Big Ball- of Mud são exemplos de padrões arquiteturais.",
    "correct": "false"
  },
  {
    "text": "A Lei de Conway afirma que o organograma de uma empresa imita a arquitetura de seus sistemas.",
    "correct": "false"
  },
  {
    "text": "Um microsserviço deve ter no máximo 20 KLOC de código fonte.",
    "correct": "false"
  },
  {
    "text": "Microsserviços devem ser fortemente coesos e fracamente acoplados.",
    "correct": "true"
  }
]
}	 
